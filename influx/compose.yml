services:
  influxdb:
    image: influxdb:latest
    container_name: c1vh-influxdb
    restart: unless-stopped
    volumes:
      - influx_data:/var/lib/influxdb2
    ports:
      - "8086:8086"
    networks:
      - monitor_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 10s
      retries: 5
    environment:
      - INFLUX_ADMIN_USER
      - INFLUX_ADMIN_PASSWORD
      - INFLUX_ADMIN_TOKEN
      - INFLUX_ORG
      - INFLUX_BUCKET
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUX_ADMIN_USER}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUX_ADMIN_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUX_ADMIN_TOKEN}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUX_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUX_BUCKET}

  telegraf:
    image: telegraf:latest
    container_name: c1vh-telegraf
    restart: unless-stopped
    environment:
      - INFLUX_ADMIN_TOKEN
      - INFLUX_ORG
      - INFLUX_BUCKET
      - HOST_PROC=/hostfs/proc
      - HOST_SYS=/hostfs/sys
      - HOST_ETC=/hostfs/etc
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /dev:/dev:ro
      - /etc:/hostfs/etc:ro
      - /proc:/hostfs/proc:ro
      - /run/udev:/run/udev:ro
      - /sys:/hostfs/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    group_add:
      - ${DOCKER_GID}
    depends_on:
      influxdb:
        condition: service_healthy
    networks:
      - monitor_net

networks:
  monitor_net:
    external: true
    name: c1vh_monitor_net

volumes:
  influx_data:
    name: influx_data
